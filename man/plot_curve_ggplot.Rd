% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dilplots-ggplot.R
\name{plot_curve_ggplot}
\alias{plot_curve_ggplot}
\title{Plot Dilution Curve Using \code{ggplot2}}
\usage{
plot_curve_ggplot(
  dilution_data,
  dilution_summary_grp,
  title,
  pal,
  dil_batch_var = "Dilution_Batch",
  conc_var = "Dilution_Percent",
  conc_var_units = "\%",
  conc_var_interval = 50,
  signal_var = "Area",
  plot_half_lin_reg = FALSE
)
}
\arguments{
\item{dilution_data}{A data frame or tibble containing dilution data}

\item{dilution_summary_grp}{A data frame or tibble containing
dilution summary data for one group}

\item{title}{Title to use for each dilution plot}

\item{pal}{Input palette for each dilution batch group in \code{dil_batch_var}.
It is a named char vector where each value is a colour and
name is a dilution batch group given in \code{dil_batch_var}}

\item{dil_batch_var}{Column name in \code{dilution_table}
to indicate the group name of each dilution batch,
used to colour the points in the dilution plot
Default: 'Dilution_Batch'}

\item{conc_var}{Column name in \code{dilution_table} to indicate concentration
Default: 'Dilution_Percent'}

\item{conc_var_units}{Unit of measure for \code{conc_var}, Default: '\%'}

\item{conc_var_interval}{Distance between two tick labels
in the dilution plot,
Default: 50}

\item{signal_var}{Column name in \code{dilution_table} to indicate signal
Default: 'Area'}

\item{plot_half_lin_reg}{Decide if we plot an extra regression line that
best fits the first half of \code{conc_var} dilution points.
Default: FALSE}
}
\value{
Output \code{ggplot} dilution plot data of one dilution batch per transition
}
\description{
Plot dilution curve using \code{ggplot2}
}
\examples{
# Data Creation
dilution_percent <- c(10, 20, 25, 40, 50, 60,
                      75, 80, 100, 125, 150)
sample_name <- c("Sample_010a", "Sample_020a",
                 "Sample_025a", "Sample_040a", "Sample_050a",
                 "Sample_060a", "Sample_075a", "Sample_080a",
                 "Sample_100a", "Sample_125a", "Sample_150a")
dilution_batch <- c("B1", "B1", "B1", "B1", "B1",
                    "B1", "B1", "B1", "B1", "B1", "B1")
transition_name <- c("Lipid1", "Lipid1", "Lipid1", "Lipid1",
                     "Lipid1", "Lipid1", "Lipid1", "Lipid1",
                     "Lipid1", "Lipid1", "Lipid1")
lipid1_area_saturated <- c(5748124, 16616414, 21702718, 36191617,
                           49324541, 55618266, 66947588, 74964771,
                           75438063, 91770737, 94692060)

dilution_data <- tibble::tibble(Sample_Name = sample_name,
                                Dilution_Batch_Name = dilution_batch,
                                Dilution_Percent = dilution_percent,
                                Transition_Name = transition_name,
                                Area = lipid1_area_saturated,
)

grouping_variable <- c("Transition_Name","Dilution_Batch_Name")

# Get the dilution batch name from dilution_table
dilution_batch_name <- dilution_batch \%>\%
  unique() \%>\%
  as.character()

dil_batch_col = c("#377eb8")

# Create palette for each dilution batch for plotting
pal <- dil_batch_col \%>\%
  stats::setNames(dilution_batch_name)


# Create dilution statistical summary
dilution_summary_grp <- dilution_data \%>\%
  summarise_dilution_table(grouping_variable = grouping_variable,
                           conc_var = "Dilution_Percent",
                           signal_var = "Area") \%>\%
  evaluate_linearity(grouping_variable = grouping_variable) \%>\%
  dplyr::select(-c(dplyr::all_of(grouping_variable)))


# Create the ggplot
p <- plot_curve_ggplot(dilution_data,
                       dilution_summary_grp = dilution_summary_grp,
                       title = "Lipid_Saturated",
                       pal = pal,
                       dil_batch_var = "Dilution_Batch_Name",
                       conc_var = "Dilution_Percent",
                       conc_var_units = "\%",
                       conc_var_interval = 50,
                       signal_var = "Area")
p
}
