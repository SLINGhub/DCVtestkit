% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outputdata-trellis.R
\name{view_trellis_html}
\alias{view_trellis_html}
\title{View \code{ggplot} or \code{plotly} Dilution Plots As Trellis}
\usage{
view_trellis_html(
  trellis_table,
  trellis_report_name = "Dilution_Plot",
  trellis_report_folder = "Dilution_Plot",
  grouping_variable = c("Transition_Name", "Dilution_Batch"),
  panel_variable = "panel",
  trellis_additional_labels = c(),
  testing = FALSE
)
}
\arguments{
\item{trellis_table}{The trellis table generated
by function \code{\link[=add_ggplot_panel]{add_ggplot_panel()}} and \code{\link[=convert_to_cog]{convert_to_cog()}} or
\code{\link[=add_plotly_panel]{add_plotly_panel()}} and \code{\link[=convert_to_cog]{convert_to_cog()}}}

\item{trellis_report_name}{A string to indicate the title
of the trellis report
Default: 'Dilution_Plot'}

\item{trellis_report_folder}{A string to indicate the output
folder of the plots found in \code{panel_variable}
Default: 'Dilution_Plot'}

\item{grouping_variable}{A character vector of
column names in \code{trellis_table} to indicate how each dilution curve
should be grouped by. It is also going to be used as a conditional
cognostics in the \code{trelliscopejs} report. The function will check
if these columns are indeed conditional cognostics
Default: c("Transition_Name", "Dilution_Batch")}

\item{panel_variable}{A column name in \code{trellis_table} to indicate
the list of plots to be used in the \code{trelliscopejs} report. This column
name must be fixed to the name \code{panel} and it must be of class
\code{trelliscope_panels}
Default: 'panel'}

\item{trellis_additional_labels}{A character vector of columns names
in \code{trellis_table} to display in the trellis report in addition to the
conditional cognostics in the \verb{grouping varaible},
Default: c()}

\item{testing}{To indicate if we are running a test,
if so, no trellis report is given out
Default: FALSE}
}
\description{
View \code{ggplot} or \code{plotly} dilution plots in a \code{trelliscope}
html report
}
\examples{
sample_name <- c("Sample_010a", "Sample_020a", "Sample_040a",
                 "Sample_060a", "Sample_080a", "Sample_100a",
                 "Sample_010b", "Sample_020b", "Sample_040b",
                 "Sample_060b", "Sample_080b", "Sample_100b")
lipid1_area <- c(22561, 31178, 39981, 48390, 52171, 53410,
                 32561, 41178, 49981, 58390, 62171, 63410)
lipid2_area <- c(2299075, 4136350, 7020062, 8922063, 9288742, 11365710,
                 2300075, 4137350, 7021062, 8923063, 9289742, 11366710)
lipid_data <- tibble::tibble(Sample_Name = sample_name,
                             Lipid1 = lipid1_area,
                             Lipid2 = lipid2_area)
dilution_percent <- c(10, 20, 40, 60, 80, 100,
                      10, 20, 40, 60, 80, 100)
dilution_batch <- c("B1", "B1", "B1", "B1", "B1", "B1",
                    "B2", "B2", "B2", "B2", "B2", "B2")
dilution_annot <- tibble::tibble(Sample_Name = sample_name,
                                 Dilution_Batch = dilution_batch,
                                 Dilution_Percent = dilution_percent)
# Create dilution table
dilution_table <- create_dilution_table(dilution_annot, lipid_data,
                                        common_column = "Sample_Name",
                                        signal_var = "Area",
                                        column_group = "Transition_Name"
)
# Add a plotly panel without dilution summary
trellis_table_auto <- add_plotly_panel(dilution_table) \%>\%
   convert_to_cog(cog_df = NULL,
                 grouping_variable = c("Transition_Name",
                                       "Dilution_Batch"),
                 panel_variable = "panel",
                 col_name_vec = "col_name_vec",
                 desc_vec = "desc_vec",
                 type_vec = "type_vec",
                 default_label_vec = "default_label_vec")

# Create a trellis report, set testing = FALSE to output results
view_trellis_html(trellis_table_auto, testing = TRUE)
}
